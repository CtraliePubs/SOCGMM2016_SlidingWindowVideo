High Dimensional Geometry of Sliding Window Embeddings of Periodic Videos

Christopher J. Tralie, ECE Department
Duke University

32nd International Symposium on Computational Geometry
Multimedia Exposition

-----------------
[1.mp3] "In this work we explore the high dimensional geometry of sliding window embeddings of periodic videos.  We show how the sliding window structure is necessary to fully disambiguate all states within a period, and we further show that PCA dimension reduction fails to capture the highly curved geometry of these embeddings.  

[2.mp3] To address this, we invoke tools from topological data analysis to parameterize the embeddings with circular coordinates.  In doing so, we are able to parameterize periodic motions in videos, even if they are extremely subtle"

[Part 1: Sliding Window Review on 1D Signals]

[3.mp3] Before launching into videos, let's first review sliding window embeddings of one dimensional time series data.S

[Fade into 1sine.png]
[3.5.mp3] This first video shows a pure sinusoid with a period of 60 samples.  

[4.mp3]
[Start playing 1sine.ogg]
We slide a window of length 60 from left to right, and we display 2D PCA of the sliding window embedding on the right.  As you can see, the embedding lies on a circle, and 100% of the variance is captured in these two dimensions

[Fade costcos3t.png]

[5.mp3] This next video shows the sliding window embedding of the superposition of cosine of t and cosine of 3t.  This time, we will show 3 dimensional PCA synchronized with the sliding window video

[Start playing 2sinescommensurate.ogg]

[6.mp3] As you can see, the geometry is much more complicated in this case.  In fact, 3 dimensions isn't enough to fully capture the geometry.  In this example, 4 dimensions are needed.

[7.mp3] And in general for each sinusoidal component, an additional two dimensions are needed.  In particular, each sinusoid contributes an independent ellipse, so the sliding window embeddings lie on hypertorii.  So this example with two sinusoidal components lies on a subset of the 2-torus

[Fade to PD2SinesCommensurate.png]

[8.mp3]

Even though we can't visualize the geometry in 3 dimensions without loss, we can still use other high dimensional tools.  In this case, we compute the one dimensional persistence diagram for the Rips filtration, which indicates the geometric strength of loops in a point cloud.

[Jump to PD2SinesCommensurate2.png]

[9.mp3] In this example, there is one strong class corresponding to the loop that this sliding window embedding completes over and over again on the 2-torus

[Fade to Sinesnoncommensurate.png]

[10.mp3] Let's now look at another example with two sinusoids which are noncommensurate; that is, the ratio between their two periods is irrational.  In this example the ratio is pi.

[Start playing 2SinesNoncommensurate.ogg]

[11.mp3]
In this example, it appears that the sliding window embedding is filling out a surface instead of just a curve.  In fact, if this went on forever, it would fill out the entire 2-torus in 4 dimensions.

[Fade to P2D2SinesNoncommensurage.png]

[12.mp3] Indeed, the persistence diagram indicates two highly persistent 1D classes with early birth times.  What exactly is going on here?

[Fade into TorusSquare1.png]
[13.mp3] One way of explaining the difference is to look at the principal square of the 2 torus, and to plot the phase of one sinusoid on the x-axis [fade into TorusSquare2.png] and the phase of the other sinusoid on the y-axis [fade into TorusSquare3.png]

[Play TorusCommensurate.ogg]
[14.mp3] As you can see, after the longer period completes, the curve retraces the same exact path along the torus

[Play TorusNoncommensurate.ogg]
[15.mp3] For the noncommensurate case, on the other hand, the path never retraces itself, so eventually the curve will fill the entire surface of the torus

----------------
[Part 2: Sliding Window Video Embeddings]
[16.mp3] Now we have the prerequisites necessary to discuss sliding windows of multidimensional data.  In particular, we will focus on sequences of images in videos.

[Fade into VideoStackTime.png]

[17.mp3] The idea is exactly the same, except instead of a sliding window for a 1D time series, we concatenate the result of a sliding window on every single pixel into one large Euclidean vector.  The results is that each point in the embedding is a bunch of frames stacked on top of each other, and each pixel in each frame constitutes a dimension.

[Fade into jumpingjackscropped.avi]
[18.mp3] Let's look at an example.  Here is a video of a woman doing jumping jacks

[Fade into jumpingjackssliding.avi]
[19.mp3] And here's the sliding window embedding of that video, with 3D PCA displayed to the right.  In this example, only 13.6% of the variance is explained in the embedding.

[Fade into PDJumpingJacks.png]
[20.mp3] Yet with our topological tools, we see that indeed there is a strong 1D persistence class corresponding to a cycle.  But why is so little variance explained by the first 3 principal components?

[Fade into Pixel.ogg]
[21.mp3] To understand this, we note a common case in natural videos of pixels jumping abruptly from the foreground into the background.  This video shows a plot of the average RGB values in the green box pi drawn on the left.  

[Start playing Pixel.ogg]
[22.mp3] As you can see, the pixels jump abruptly from foreground to background to foreground again, forming something like a square wave, which needs many harmonics to represent.  As we noted in the 1D case, each harmonic needs two dimensions to represent, and this video at this resolution needs about 25 harmonics.

[23.mp3] Let's take a look at the coordinate axes spanning the ellipses of the first few harmonics.  Since the sliding window embedding is a stack of frames, each axis can be played as a video.  Let's look at the first two axes

[Play JumpingJacksPCs/PC0, PC1.avi side by side]

[24.mp3] The first two coordinate axes form an in phase and a quadrature component of the smoothest motion in the video

[Play JumpingJacksPCs/PC2, PC3.avi side by side]
[25.mp3] The next two coordinate axes, corresponding to the first harmonic ellipse, form an in phase and a quadrature component at twice the base frequency

[Play JumpingJacksPCs/PC4, PC5.avi side by side]
[26.mp3] Similarly, the coordinate axes spanning the plane of the second harmonic ellipse are at three times the base frequency

[Play JumpingJacksPCs/PC6, PC7.avi side by side]
[27.mp3] And the coordinate axes spanning the plane of the third harmonic ellipse are at four times the base frequency

[Fade into JumpingJacksCircCoords.png]
[28.mp3] Now let's look at the circular coordinates of the curve that results from walking around ellipses along all of these planes simultaneously.  Aside from a couple of outliers, these coordinates track three periods of the jumping jack quite nicely.

[Fade into JumpingJacksRaw.ogg]
[29.mp3] Finally, we note that a raw embedding with no sliding window, or each frame as its own point, does not form a topological loop in the embedding.  This is because without the delay, the frames have mirror symmetry between the first half and second half of their period, so it is impossible to uniquely represent all states

[Fade into PDJumpingJacksRaw.png]
[30.mp3] Looking at the 1D persistence diagram in this case, there are no strongly persistent 1 cycles

[Fade into heartcrop.avi]
[31.mp3] Let's look at another example video, this time of an animation of a beating heart.

[Fade into BeatingHeartSyntheticSliding.ogg]
[32.mp3] As with the jumping jacks example, 3D PCA shows a nice loop, though only only about 30% of the variance is explained with these three dimensions

[Fade into PDBeatingHeart.png]

[33.mp3] But again, the 1D persistence diagram shows a strong cycle exists

[Fade into HeartbeatCircCoords.png]

[34.mp3] And the cohomology circular coordinates corresponding to the strongest class nicely parameterize the heartbeat

[35.mp3] And as before, when we look at the principal axes of each ellipse, we see that the lower order ellipses are quite smooth
[Fade into PC videos]

[36.mp3]
While the higher order axes represent sharper, higher frequency motions

----------------
[Part 3: Hidden Motion Parameterization]
[37.mp3] We conclude this work by examining a video which has hidden periodic motion

[Fade into myneck.ogg]

[38.mp3] Here is a video of someone sitting completely still not breathing, and there appears to be very little motion

[Fade into SubtleMotionOriginal.ogg]

[39.mp3]
However, when we look at PCA, ignoring the first few components which correspond to drift, we see a cyclic pattern along a cylinder.

[Fade into PDBeatingNeck.png]
[40.mp3]

And when we look at the 1D persistence diagram. [Fade into PDBeatingNeck2.png] We see a very strong 1D persistence class.  What's going on here?

[Fade into SubtleMotionAmplified.ogg]

[42.mp3] If we apply phase-based video magnification techniques to the video to boost subtle signals and show PCA again, we see what's actually been captured by the sliding window embedding is something related to the person's heartbeat.

[43.mp3] Notice, for example, how the subclavic artery causes the collarbone to move up and down with each heartbeat, and notice how the person shakes back and forth twice for each heartbeat.  It's this shaking that causes the delay embedding to go through two loops for each beat.

[Fade into HiddenMotionCircCoords.png]
[44.mp3] Indeed, the cohomology circular coordinate parameterizes this motion nicely.  Based on the framerate of 25 frames per second and the observation that the circular coordinates are picking up on twice the heartbeat, we estimate the average heartrate of this person to be between 61 and 62 beats per minute.
